---
title: "moveEZ: Animated biplots"
subtitle: "Johané Nienkemper-Swanepoel & Raeesa Ganey"
author: "<br>Centre for Multi-Dimensional Data Visualisation (MuViSU).<br>  Department of Statistics and Actuarial Science, Stellenbosch University.<br> School of Statistics and Actuarial Science, University of the Witwatersrand, Johannesburg, South Africa.<br>National Institute for Theoretical and Computational Sciences.<br><br><br>**NITheCS seminar series: 27 October 2025**"
format: 
  revealjs:
    #incremental: true
    logo: images/moveEZ_logo.png
    #footer: "[UCT Seminar slides](https://github.com/jnienk/UCT_seminar_Oct2025)"
    slide-number: c/t
    #multiplex: true
    code-copy: true
    code-link: true
    theme: [formatting/SU.scss]
    show-slide-number: all
    code-overflow: scroll
    highlight-style: a11y
    controls: true
    height: 1080
    width: 1920
    css: [formatting/custom.css]
    embed-resources: true
    self-contained: true
resources: 
  - animations/**
execute:
  echo: true
  eval: true
include-in-header:
  - text: |
      <style>
        body:has(.present.hide-logo) {
          --logo-display: none;
        }
        .slide-logo {
          display: var(--logo-display, block) !important;
        }
      </style>
---

```{r setup}
#| include: false

library(knitr)
options(htmltools.dir.version = FALSE, tibble.width = 45)
opts_chunk$set(
  echo = TRUE, 
  warning = FALSE, 
  message = FALSE, 
  error=FALSE, 
  comment = "#",
  fig.align = 'center', 
  fig.retina = 5,
  out.width = "80%",
  fig.show = 'hold',
  cache = FALSE
)

# libraries
library(biplotEZ) ; library(gganimate) 

```

## Home life {.hide-logo}

::: {layout="[45,-5,45]"}
![](images/family.jpg)

![](images/Marmite.jpg)
:::


# <img src="images/moveEZ_logo.png" height="120px" style="vertical-align:middle;"/>

::: info-box
`moveEZ` - pronounced **move easy**
:::

An `R` package for animated biplots.

Ganey R & Nienkemper-Swanepoel J (2025). *moveEZ: Animated Biplots*.moveEZ, R package version 1.1.1, <https://CRAN.R-project.org/package=moveEZ>.

## The team {.hide-logo}

![](images/Visitors.jpg){fig-align="center" width="60%"}

# Background

-   Consider a dataset ${\bf{X}}$ comprising of $n$ observations and $p$ continuous variables, along with an additional variable representing "time".

-   A natural approach is to construct separate biplots for each level of the time variable, enabling the user to explore how samples and variable relationships evolve across time.

-   However, when the time variable includes many levels, this quickly results in an overwhelming number of biplots.

-   The goal of `moveEZ` is to address this challenge by animating a single biplot across the levels of the time variable, allowing for dynamic visualisation of temporal or sequential changes in the data.

# Biplots

```{=html}
<ul style="font-size: 1.2em; line-height: 1.4em; list-style-position: outside; padding-left: 0.5em;">
  <li class="fragment">Singular Value Decomposition</li>
</ul>

<div class="fragment" style="text-align: center; font-size: 1.4em; margin-top: -1em;">
  <table style="display: inline-table; border-collapse: separate; border-spacing: 20px;">
<tr>
<td style="border: 4px solid green; padding: 20px; text-align: center;"><b>X</b><br><span style="font-size: 0.7em;"><i>n × p</i></span></td>
<td>=</td>
<td style="border: 4px solid deepskyblue; padding: 20px; text-align: center;"><b>U</b><br><span style="font-size: 0.7em;"><i>n × p</i></span></td>
<td style="border: 4px solid orange; padding: 20px; text-align: center;"><b>D</b><br><span style="font-size: 0.7em;"><i>p × p</i></span></td>
<td style="border: 4px solid purple; padding: 20px; text-align: center;"><b>V′</b><br><span style="font-size: 0.7em;"><i>p × p</i></span></td>
</tr>
</table>
</div>

<ul style="font-size: 1.2em; line-height: 1.4em; list-style-position: outside; padding-left: 0.5em;">
  <li class="fragment">Representing samples</li>
</ul>

<div class="fragment" style="text-align: center; font-size: 1.4em; margin-top: -1em;">
  <table style="display: inline-table; border-collapse: separate; border-spacing: 20px;">
<tr>
<td style="border: 4px solid red; padding: 20px; text-align: center;"><b>Z</b><br><span style="font-size: 0.7em;"><i>n × p</i></span></td>
<td>=</td>
<td style="border: 4px solid green; padding: 20px; text-align: center;"><b>X</b><br><span style="font-size: 0.7em;"><i>n × p</i></span></td>
<td style="border: 4px solid purple; padding: 20px; text-align: center;"><b>V′</b><br><span style="font-size: 0.7em;"><i>p × p</i></span></td>
</tr>
</table>
</div>

<ul style="font-size: 1.2em; line-height: 1.4em; list-style-position: outside; padding-left: 0.5em;">
  <li class="fragment">Representing variables</li>
</ul>

<div class="fragment" style="text-align: center; font-size: 1.4em;">
  <table style="display: inline-table; border-collapse: separate; border-spacing: 20px;">
<tr>
<td style="border: 4px solid purple; padding: 20px; text-align: center;"><b>V</b><br><span style="font-size: 0.7em;"><i>p × p</i></span></td>
</tr>
</table>
</div>
```

# Climate Data

::::: columns
::: {.column width="45%"}
-   **Period:** 1950 to 2020 (10 year increments)
-   **Regions:** <img src="images/Africa_data.png" alt="IPCC regions map" style="width: 1000px; height: auto; margin-bottom: 0.5em;"/>
-   **IPCC**: Intergovernmental Panel on Climate Change
:::

::: {.column width="45%"}
-   **Aggregated monthly measurements:**
    1.  Accumulated precipitation (**AccPrec**)\
    2.  Daily evaporation (**DailyEva**)\
    3.  Mean temperature (**Temp**)\
    4.  Soil moisture (**SoilMois**)\
    5.  Wind speed (**Wind**)\
    6.  Standardised precipitation index 6-month (**SPI6**)\
:::
:::::

:::: {style="text-align: center; margin-top: 2em;"}
::: {style="font-size: 0.8em;"}
```         
Iturbide et al. 2020. An update of IPCC climate reference regions for subcontinental analysis of climate model data: definition and aggregated datasets. Earth System Science Data 12(4):2959-2970.

Source: https://sites.ualberta.ca/~ahamann/data/climateaf.html
```
:::
::::

## Climate Data

```{r, echo=FALSE}
library(moveEZ)
data("Africa_climate")

display_data <- Africa_climate 
library(DT)
datatable(display_data, rownames = FALSE, 
          options = list(pageLength = 10, dom = "tp"))
```

# PCA biplot

::::: columns
::: {.column width="45%"}
```{r}
#| label: plot-left
#| eval: false
library(biplotEZ)
bp <- biplot(Africa_climate, scaled = TRUE) |> 
  PCA(group.aes = Africa_climate$Region) |> 
  samples(opacity = 0.8, 
          col = scales::hue_pal()(10)) |> 
  axes(col="black") |> 
  plot()
```
:::

::: {.column width="55%"}
```{r}
#| fig-width: 6
#| fig-height: 6
#| label: plot-left
#| echo: false
```
:::
:::::

## Fixed Variable Frame

A biplot is first constructed using the full dataset ${\bf{X}}$, and the animation is achieved by slicing the observations according to the "time" variable. In this approach, the variable axes remain fixed and only the sample points are animated over time.

```{=html}
<!-- Container -->
<div style="display: flex; justify-content: space-around; align-items: center; font-family: sans-serif;">

  <!-- Samples Box (Step 2) -->
  <div class="fragment" style="text-align: center;">
    <div style="font-weight: bold; font-size: 36px; margin-bottom: 20px;">Samples</div>
    <div style="border: 4px solid red; width: 150px; height: 450px; display: flex; flex-direction: column; justify-content: space-evenly;">
      <div style="border-top: 3px solid steelblue;"></div>
      <div style="border-top: 3px solid steelblue;"></div>
      <div style="font-weight: bold; font-size: 48px;">Z</div>
      <div style="border-top: 3px solid steelblue;"></div>
      <div style="border-top: 3px solid steelblue;"></div>
    </div>
  </div>

  <!-- Variables Box (Step 3) -->
  <div class="fragment" style="text-align: center;">
    <div style="font-weight: bold; font-size: 36px; margin-bottom: 20px;">Variables</div>
    <div style="border: 4px solid purple; width: 150px; height: 300px; display: flex; justify-content: center; align-items: center;">
      <div style="font-weight: bold; font-size: 48px;">V</div>
    </div>
  </div>

</div>
```

## `moveplot()`

Using the previously created PCA biplot object `bp`, the `moveplot()` function enables animation of the sample points over time. This function is piped with several key arguments:

-   `time.var`: Specifies the name of the variable in the dataset that represents the temporal or sequential dimension. In this case, the variable "Year" relates to the time variable.

-   `group.var`: Indicates a grouping variable used for colour-coding. In this case, the variable "Region" relates to the group variable.

-   `hulls`: A logical argument that determines whether to display individual sample points or to draw convex hulls around each group.

-   `scale.var`: A numerical value to scale the vectors.

::: fragment
`move`: A logical argument that controls whether the biplot is animated. If set to `TRUE`, the sample points are animated across time. If set to `FALSE`, the function returns a faceted plot showing a static biplot for each time level. <br> `shadow`: A logical argument that controls whether samples of previous time points are still displayed as time moves forward (*burn-in* of previous states). Only works when `move = TRUE` and `hulls = FALSE`.
:::

## `moveplot()`

```{r echo=TRUE, eval=FALSE}
#| fig-width: 9
#| fig-height: 6
bp |> moveplot(time.var = "Year", group.var = "Region", hulls = FALSE, move = FALSE)
```

```{r echo=FALSE, eval=TRUE}
#| fig-width: 9
#| fig-height: 6
bp |> moveplot(time.var = "Year", group.var = "Region", hulls = FALSE, move = FALSE)
```

## `moveplot()`

```{r echo=TRUE, eval=FALSE}
#| fig-width: 9
#| fig-height: 6
bp1 |> moveplot(time.var = "Year", group.var = "Region", hulls = TRUE, move = TRUE)
```

![](animations/bp1.gif){fig-align="center" width="60%"}

```{r echo=FALSE, eval=FALSE}
#| fig-width: 9
#| fig-height: 6
bp1 |> moveplot(time.var = "Year", group.var = "Region", hulls = TRUE, move = TRUE)
anim_save("animations/bp1.gif", animation = last_animation())
```

## `moveplot()`

```{r echo=TRUE, eval=FALSE}
#| fig-width: 9
#| fig-height: 6
bp |> moveplot(time.var = "Year", group.var = "Region", hulls = FALSE, move = TRUE, shadow = TRUE)
```

![](animations/bp2.gif){fig-align="center" width="60%"}

```{r echo=FALSE, eval=FALSE}
#| fig-width: 9
#| fig-height: 6
bp2 <- bp |> moveplot(time.var = "Year", group.var = "Region", hulls = FALSE, move = TRUE, 
               shadow = TRUE)
anim_save("animations/bp2.gif", animation = last_animation())
```

## Dynamic Frame

::: fragment
Separate biplots are constructed for each time slice of the data. Both the sample points and variable axes evolve over time, resulting in a fully dynamic animation that reflects temporal changes in the underlying data structure.
:::

<br>

::: fragment
```{=html}
<div style="font-family: sans-serif; display: flex; flex-direction: column; align-items: center; margin-top: 30px;">

  <!-- Matrix Rows -->
  <div style="display: flex; flex-direction: column; gap: 30px;">
  
    <!-- Header -->
    <div style="display: flex; font-weight: bold; justify-content: center; align-items: center; font-size: 24px;">
      <div style="width: 150px; text-align: center;"></div>
      <div style="width: 100px;"></div>
      <div style="width: 150px; text-align: center;">Samples</div>
      <div style="width: 150px; text-align: center;">Variables</div>
    </div>

    <!-- Row 1 -->
    <div style="display: flex; justify-content: center; align-items: center; gap: 60px;">
      <div style="border: 3px solid green; padding: 15px 35px; font-weight: bold; font-size: 32px;">X<sub>1</sub></div>
      <div style="font-size: 36px;">→</div>
      <div style="border: 3px solid red; padding: 15px 30px; font-weight: bold; font-size: 32px;">Z<sub>1</sub></div>
      <div style="border: 3px solid purple; padding: 50px 35px; font-weight: bold; font-size: 32px;">V<sub>1</sub></div>
    </div>

    <!-- Row 2 -->
    <div style="display: flex; justify-content: center; align-items: center; gap: 60px;">
      <div style="border: 3px solid green; padding: 15px 35px; font-weight: bold; font-size: 32px;">X<sub>2</sub></div>
      <div style="font-size: 36px;">→</div>
      <div style="border: 3px solid red; padding: 15px 30px; font-weight: bold; font-size: 32px;">Z<sub>2</sub></div>
      <div style="border: 3px solid purple; padding: 50px 35px; font-weight: bold; font-size: 32px;">V<sub>2</sub></div>
    </div>

    <!-- Spacer -->
    <br>

    <!-- Row 3 -->
    <div style="display: flex; justify-content: center; align-items: center; gap: 60px;">
      <div style="border: 3px solid green; padding: 15px 35px; font-weight: bold; font-size: 32px;">X<sub>8</sub></div>
      <div style="font-size: 36px;">→</div>
      <div style="border: 3px solid red; padding: 15px 30px; font-weight: bold; font-size: 32px;">Z<sub>8</sub></div>
      <div style="border: 3px solid purple; padding: 50px 35px; font-weight: bold; font-size: 32px;">V<sub>8</sub></div>
    </div>
  </div>
</div>
```
:::

## `moveplot2()`

::: font-large
-   The `moveplot2()` function extends the animation to both the sample points and the variable axes.

-   Unlike `moveplot()`, which keeps the variable axes fixed, `moveplot2()` constructs a separate biplot for each time slice, allowing both components to evolve over time.

-   The function shares the same arguments as `moveplot()`, with the `move` argument determining whether the animation is shown or presented as static facets for samples and variables. Setting `move = TRUE` produces an animated biplot in which both the samples and variables transition across time.
:::

## `moveplot2()`

::: font-large
Additional enhancements include reflections to align the biplots if needed. <br>

Available options include:

-   `"x"` – Reflect about the x-axis

-   `"y"` – Reflect about the y-axis

-   `"xy"` – Reflect about both axes

Both `align.time` and `reflect` can be vectors when alignment is needed at multiple time points with each entry in `reflect` corresponds to a time point in `align.time`.
:::

## `moveplot2()`

```{r echo=TRUE, eval=FALSE}
#| fig-width: 9
#| fig-height: 6
bp |> moveplot2(time.var = "Year", group.var = "Region", hulls = TRUE, move = FALSE)
```

![](animations/bp3.gif){fig-align="center" width="60%"}

```{r echo=FALSE, eval=FALSE}
#| fig-width: 9
#| fig-height: 6
bp3 <- bp |> moveplot2(time.var = "Year", group.var = "Region", hulls = TRUE, move = FALSE)
anim_save("animations/bp3.gif", animation = last_animation())
```

## `moveplot2()`

Here, the biplot is aligned at the 1950 time point by reflection about the x-axis.

```{r echo=TRUE, eval=FALSE}
#| fig-width: 9
#| fig-height: 6
bp |> 
  moveplot2(time.var = "Year", group.var = "Region", hulls = TRUE,  move = TRUE, align.time = "1950", reflect = "x")
```

![](animations/bp4.gif){fig-align="center" width="60%"}

```{r echo=FALSE, eval=FALSE}
#| fig-width: 9
#| fig-height: 6
bp4 <- bp |> moveplot2(time.var = "Year", group.var = "Region", hulls = TRUE, 
                move = TRUE, align.time = "1950", reflect = "x")
anim_save("animations/bp4.gif", animation = last_animation())
```

## Dynamic Frame: configurative matching

::: presentation-font-smaller
-   As before, separate biplots are constructed for each time slice of the data.

-   Now, the biplots are aligned according to a specific **target**:

    -   Default: the average of the separate biplot coordinates is calculated and used as a **target**.

    -   Option: specify a **target** (e.g. a specific year)

-   Generalised orthogonal Procrustes Analysis (GPA) is used to transform each biplot to the target:

    -   translation, scaling, rotation and reflection

-   Results in an aligned animation to expose subtle temporal changes that occur over time.
:::

## GPA methodology

::::: columns
::: column
-   Image 1: ${\bf{A}}$ is the target visualisation
-   Image 2: ${\bf{B}}$ is the testee visualisation, figures are already centred (translation not required)
-   Image 3: The coordinates of ${\bf{B}}$ are reflected
-   Image 4: The coordinates of ${\bf{B}}$ are rotated and scaled

```         
Borg, I. & Groenen, P. 2005. Modern Multidimensional Scaling. 2nd ed. United States of America: Springer. (Page 433)
```
:::

::: column
![](images/Procrustes_img.jpg){.large-image}
:::
:::::

# `moveplot3()`

::: presentation-font-smaller
This function shares the same arguments as `moveplot()` and `moveplot2()`, with the addition of the `target` argument:

-   `target = NULL` - use the average of available biplots
-   `target = Africa_climate_target` - use of a specific target dataset

To illustrate the use of a fixed target, consider the year 1989 from the `Africa_climate` data set, which consists of the same variables and number of observations:

```{r, echo = FALSE}
data("Africa_climate_target")

display_data <- Africa_climate_target 
library(DT)
datatable(display_data, rownames = FALSE, 
          options = list(pageLength = 5, dom = "tp"))
```
:::

# `moveplot3()`

```{r echo=TRUE, eval=FALSE}
#| fig-width: 9
#| fig-height: 6
bp |> moveplot3(time.var = "Year", group.var = "Region", hulls = TRUE, move = TRUE, target = NULL)
```

![](animations/bp5.gif){fig-align="center" width="60%"}

```{r echo=FALSE, eval=FALSE}
#| fig-width: 9
#| fig-height: 6
bp5 <- bp |> moveplot3(time.var = "Year", group.var = "Region", hulls = TRUE, move = TRUE,
                target = NULL)
anim_save("animations/bp5.gif", animation = last_animation())
```

# `moveplot3()`

```{r echo=TRUE, eval=FALSE}
#| fig-width: 9
#| fig-height: 6
bp |> moveplot3(time.var = "Year", group.var = "Region", hulls = TRUE, move = TRUE, target = Africa_climate_target)
```

![](animations/bp6.gif){fig-align="center" width="60%"}

```{r echo=FALSE, eval=FALSE}
#| fig-width: 9
#| fig-height: 6
bp6 <- bp |> moveplot3(time.var = "Year", group.var = "Region", hulls = TRUE, move = TRUE, 
                target = Africa_climate_target)
anim_save("animations/bp6.gif", animation = last_animation())
```

## Quantifying the movement

::: presentation-font-smaller
In conjunction with `moveplot3()`, five measures of comparison can be calculated to measure the difference between the target display and the display representing every other time point.

-   Procrustes Statistic (PS)
-   Congruence Coefficient (CC)
-   Absolute Mean Bias (AMB)
-   Mean Bias (MB)
-   Root Mean Squared Bias (RMSB)

This can be extracted as tables or line graphs.
:::

```{r, eval = FALSE, output = FALSE}
results <- bp |> moveplot3(time.var = "Year", group.var = "Region", hulls = TRUE, move = FALSE, 
                target = Africa_climate_target) |> evaluation()
```

## Table of evaluation measures

::::: columns
::: {.column width="40%"}
```{r, eval = TRUE, results = FALSE, echo = FALSE, include = FALSE}
results <- bp |> moveplot3(time.var = "Year", group.var = "Region", hulls = TRUE, move = FALSE, 
                target = Africa_climate_target) |> evaluation()
```

```{r, echo = FALSE}
print(knitr::kable(results$eval.list[1:2], format = "simple"))
```

```{r, echo = FALSE}
print(knitr::kable(results$eval.list[3:4], format = "simple"))
```
:::

::: {.column width="40%"}
```{r, echo = FALSE}
print(knitr::kable(results$eval.list[5:6], format = "simple"))
```

```{r, echo = FALSE}
print(knitr::kable(results$eval.list[7:8], format = "simple"))
```
:::
:::::

# `moveplot3()`

```{r}
#| fig-width: 9
#| fig-height: 6
results$bias.plot
```

# `moveplot3()`

```{r}
#| fig-width: 9
#| fig-height: 6
results$fit.plot
```


## Acknowledgements

::: font-large
We acknowledge the support and contributions of:

-   **Dianne Cook** - Monash University

    -   **NGA(MaSS)** - funding for this collaboration and visit

-   [Emi Tanaka](https://github.com/emitanaka/talks/tree/master/Toronto2022) - slide inspiration

-   [Ursula Laa](https://github.com/uschiLaa/dssv25) - slide inspiration
:::
